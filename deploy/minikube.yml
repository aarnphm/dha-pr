### Ingress Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ingress
  name: ingress
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ingress
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ingress
    spec:
      containers:
        - image: aar0npham/dha-pr-ingress:latest
          name: ingress
          env:
            - name: APIKEY
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: APIKEY
            - name: PG_DATABASE
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_DATABASE
            - name: PG_HOST
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_HOST
            - name: PG_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_PASSWORD
            - name: PG_PORT
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_PORT
            - name: PG_SEARCHPATH
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_SEARCHPATH
            - name: PG_USER
              valueFrom:
                secretKeyRef:
                  name: ingress
                  key: PG_USER
          imagePullPolicy: Always
          resources:
            requests:
              cpu: "250m"
      imagePullSecrets:
        - name: regcred
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
### Ingress Service
apiVersion: v1
kind: Service
metadata:
  name: ingress-service
  namespace: default
  labels:
    app: ingress
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
  selector:
    app: ingress
  type: LoadBalancer

---
### Price Recommender Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  generation: 1
  labels:
    app: pr
  name: pr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pr
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: pr
    spec:
      containers:
        - image: aar0npham/dha-pr:with-nocuda
          imagePullPolicy: Always
          name: pr
          env:
            - name: MONGO_URI
              valueFrom:
                secretKeyRef:
                  name: pr
                  key: MONGO_URI
          resources:
            requests:
              cpu: "250m"
      imagePullSecrets:
        - name: regcred
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30

---
### Price Recommender Service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pr
  name: pr-service
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
    - nodePort: 32610
      port: 30000
      protocol: TCP
      targetPort: 5000
  selector:
    app: pr
  sessionAffinity: None
  type: NodePort

---
### SwaggerUI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swaggerui
  labels:
    app: swaggerui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: swaggerui
  template:
    metadata:
      labels:
        app: swaggerui
    spec:
      containers:
        - name: swaggerui
          image: aar0npham/dha-pr-swagger:latest
          env:
            - name: BASE_URL
              value: "/docs"
            - name: API_URLS
              value: >-
                [
                  {url:'swagger.yml',name:'Ingress Server'}
                ]

---
### SwaggerUI Service
apiVersion: v1
kind: Service
metadata:
  name: swaggerui
  labels:
    app: swaggerui
spec:
  selector:
    app: swaggerui
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
